{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "77c7c101",
   "metadata": {},
   "source": [
    "## Stock Prediction using Numerical & Sentimental Analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4a559a19",
   "metadata": {},
   "source": [
    "**Name: SANTOSH KUMAR PAUL**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "df79ca50",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[nltk_data] Downloading package stopwords to C:\\Users\\Santosh\n",
      "[nltk_data]     Paul\\AppData\\Roaming\\nltk_data...\n",
      "[nltk_data]   Package stopwords is already up-to-date!\n",
      "[nltk_data] Downloading package vader_lexicon to C:\\Users\\Santosh\n",
      "[nltk_data]     Paul\\AppData\\Roaming\\nltk_data...\n",
      "[nltk_data]   Package vader_lexicon is already up-to-date!\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import itertools\n",
    "from statsmodels.tsa.stattools import adfuller, acf, pacf\n",
    "from statsmodels.tsa.arima_model import ARIMA\n",
    "import nltk  # importing natural language toolkit\n",
    "import re  # re stands for regular expresssion which helps us to find particular string.\n",
    "from nltk.corpus import stopwords  # Stopword removes all the unneccessary text values from the test dataset\n",
    "nltk.download('stopwords')  # downloading the stopword \n",
    "nltk.download('vader_lexicon') # downloading the vader_lexicon \n",
    "from textblob import TextBlob\n",
    "from nltk.sentiment.vader import SentimentIntensityAnalyzer\n",
    "from nltk.stem.porter import PorterStemmer   # Porter stemmer is used to get the stem word\n",
    "from sklearn.metrics import mean_squared_error\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.ensemble import RandomForestRegressor, AdaBoostRegressor\n",
    "import xgboost \n",
    "import lightgbm "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "a4ebd588",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: lightgbm in c:\\users\\santosh paul\\anaconda3\\lib\\site-packages (3.3.2)\n",
      "Requirement already satisfied: numpy in c:\\users\\santosh paul\\anaconda3\\lib\\site-packages (from lightgbm) (1.20.1)\n",
      "Requirement already satisfied: wheel in c:\\users\\santosh paul\\anaconda3\\lib\\site-packages (from lightgbm) (0.36.2)\n",
      "Requirement already satisfied: scikit-learn!=0.22.0 in c:\\users\\santosh paul\\anaconda3\\lib\\site-packages (from lightgbm) (0.24.1)\n",
      "Requirement already satisfied: scipy in c:\\users\\santosh paul\\anaconda3\\lib\\site-packages (from lightgbm) (1.6.2)\n",
      "Requirement already satisfied: threadpoolctl>=2.0.0 in c:\\users\\santosh paul\\anaconda3\\lib\\site-packages (from scikit-learn!=0.22.0->lightgbm) (2.1.0)\n",
      "Requirement already satisfied: joblib>=0.11 in c:\\users\\santosh paul\\anaconda3\\lib\\site-packages (from scikit-learn!=0.22.0->lightgbm) (1.0.1)\n"
     ]
    }
   ],
   "source": [
    "!pip install lightgbm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "25f8610a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: pmdarima in c:\\users\\santosh paul\\anaconda3\\lib\\site-packages (1.8.5)\n",
      "Requirement already satisfied: numpy>=1.19.3 in c:\\users\\santosh paul\\anaconda3\\lib\\site-packages (from pmdarima) (1.20.1)\n",
      "Requirement already satisfied: statsmodels!=0.12.0,>=0.11 in c:\\users\\santosh paul\\anaconda3\\lib\\site-packages (from pmdarima) (0.12.2)\n",
      "Requirement already satisfied: scikit-learn>=0.22 in c:\\users\\santosh paul\\anaconda3\\lib\\site-packages (from pmdarima) (0.24.1)\n",
      "Requirement already satisfied: joblib>=0.11 in c:\\users\\santosh paul\\anaconda3\\lib\\site-packages (from pmdarima) (1.0.1)\n",
      "Requirement already satisfied: pandas>=0.19 in c:\\users\\santosh paul\\anaconda3\\lib\\site-packages (from pmdarima) (1.2.4)\n",
      "Requirement already satisfied: Cython!=0.29.18,>=0.29 in c:\\users\\santosh paul\\anaconda3\\lib\\site-packages (from pmdarima) (0.29.23)\n",
      "Requirement already satisfied: scipy>=1.3.2 in c:\\users\\santosh paul\\anaconda3\\lib\\site-packages (from pmdarima) (1.6.2)\n",
      "Requirement already satisfied: urllib3 in c:\\users\\santosh paul\\anaconda3\\lib\\site-packages (from pmdarima) (1.26.4)\n",
      "Requirement already satisfied: setuptools!=50.0.0,>=38.6.0 in c:\\users\\santosh paul\\anaconda3\\lib\\site-packages (from pmdarima) (52.0.0.post20210125)\n",
      "Requirement already satisfied: python-dateutil>=2.7.3 in c:\\users\\santosh paul\\anaconda3\\lib\\site-packages (from pandas>=0.19->pmdarima) (2.8.1)\n",
      "Requirement already satisfied: pytz>=2017.3 in c:\\users\\santosh paul\\anaconda3\\lib\\site-packages (from pandas>=0.19->pmdarima) (2021.1)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\santosh paul\\anaconda3\\lib\\site-packages (from python-dateutil>=2.7.3->pandas>=0.19->pmdarima) (1.15.0)\n",
      "Requirement already satisfied: threadpoolctl>=2.0.0 in c:\\users\\santosh paul\\anaconda3\\lib\\site-packages (from scikit-learn>=0.22->pmdarima) (2.1.0)\n",
      "Requirement already satisfied: patsy>=0.5 in c:\\users\\santosh paul\\anaconda3\\lib\\site-packages (from statsmodels!=0.12.0,>=0.11->pmdarima) (0.5.1)\n"
     ]
    }
   ],
   "source": [
    "!pip install pmdarima"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "18a8e4cf",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_prices = pd.read_csv('TSLA.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "27478bce",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Adj Close</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>03-01-2012</td>\n",
       "      <td>5.788</td>\n",
       "      <td>5.900</td>\n",
       "      <td>5.530</td>\n",
       "      <td>5.616</td>\n",
       "      <td>5.616</td>\n",
       "      <td>4640500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>04-01-2012</td>\n",
       "      <td>5.642</td>\n",
       "      <td>5.734</td>\n",
       "      <td>5.500</td>\n",
       "      <td>5.542</td>\n",
       "      <td>5.542</td>\n",
       "      <td>3150500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>05-01-2012</td>\n",
       "      <td>5.552</td>\n",
       "      <td>5.586</td>\n",
       "      <td>5.370</td>\n",
       "      <td>5.424</td>\n",
       "      <td>5.424</td>\n",
       "      <td>5027500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>06-01-2012</td>\n",
       "      <td>5.440</td>\n",
       "      <td>5.558</td>\n",
       "      <td>5.282</td>\n",
       "      <td>5.382</td>\n",
       "      <td>5.382</td>\n",
       "      <td>4931500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>09-01-2012</td>\n",
       "      <td>5.400</td>\n",
       "      <td>5.498</td>\n",
       "      <td>5.224</td>\n",
       "      <td>5.450</td>\n",
       "      <td>5.450</td>\n",
       "      <td>4485000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>10-01-2012</td>\n",
       "      <td>5.488</td>\n",
       "      <td>5.552</td>\n",
       "      <td>5.450</td>\n",
       "      <td>5.524</td>\n",
       "      <td>5.524</td>\n",
       "      <td>3359000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>11-01-2012</td>\n",
       "      <td>5.524</td>\n",
       "      <td>5.676</td>\n",
       "      <td>5.460</td>\n",
       "      <td>5.646</td>\n",
       "      <td>5.646</td>\n",
       "      <td>3361500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>12-01-2012</td>\n",
       "      <td>5.696</td>\n",
       "      <td>5.724</td>\n",
       "      <td>5.562</td>\n",
       "      <td>5.650</td>\n",
       "      <td>5.650</td>\n",
       "      <td>3646500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>13-01-2012</td>\n",
       "      <td>5.680</td>\n",
       "      <td>5.700</td>\n",
       "      <td>4.528</td>\n",
       "      <td>4.558</td>\n",
       "      <td>4.558</td>\n",
       "      <td>27502000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>17-01-2012</td>\n",
       "      <td>5.324</td>\n",
       "      <td>5.468</td>\n",
       "      <td>5.282</td>\n",
       "      <td>5.320</td>\n",
       "      <td>5.320</td>\n",
       "      <td>23258000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>18-01-2012</td>\n",
       "      <td>5.338</td>\n",
       "      <td>5.376</td>\n",
       "      <td>5.250</td>\n",
       "      <td>5.362</td>\n",
       "      <td>5.362</td>\n",
       "      <td>6301000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>19-01-2012</td>\n",
       "      <td>5.438</td>\n",
       "      <td>5.548</td>\n",
       "      <td>5.322</td>\n",
       "      <td>5.352</td>\n",
       "      <td>5.352</td>\n",
       "      <td>6231500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>20-01-2012</td>\n",
       "      <td>5.380</td>\n",
       "      <td>5.400</td>\n",
       "      <td>5.280</td>\n",
       "      <td>5.320</td>\n",
       "      <td>5.320</td>\n",
       "      <td>3311500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>23-01-2012</td>\n",
       "      <td>5.362</td>\n",
       "      <td>5.442</td>\n",
       "      <td>5.320</td>\n",
       "      <td>5.354</td>\n",
       "      <td>5.354</td>\n",
       "      <td>2973000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>24-01-2012</td>\n",
       "      <td>5.326</td>\n",
       "      <td>5.536</td>\n",
       "      <td>5.288</td>\n",
       "      <td>5.484</td>\n",
       "      <td>5.484</td>\n",
       "      <td>4290000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>25-01-2012</td>\n",
       "      <td>5.454</td>\n",
       "      <td>5.602</td>\n",
       "      <td>5.410</td>\n",
       "      <td>5.594</td>\n",
       "      <td>5.594</td>\n",
       "      <td>3056000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>26-01-2012</td>\n",
       "      <td>5.614</td>\n",
       "      <td>5.916</td>\n",
       "      <td>5.600</td>\n",
       "      <td>5.788</td>\n",
       "      <td>5.788</td>\n",
       "      <td>6355500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>27-01-2012</td>\n",
       "      <td>5.700</td>\n",
       "      <td>5.944</td>\n",
       "      <td>5.700</td>\n",
       "      <td>5.866</td>\n",
       "      <td>5.866</td>\n",
       "      <td>3742000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>30-01-2012</td>\n",
       "      <td>5.898</td>\n",
       "      <td>5.922</td>\n",
       "      <td>5.706</td>\n",
       "      <td>5.914</td>\n",
       "      <td>5.914</td>\n",
       "      <td>3645000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>31-01-2012</td>\n",
       "      <td>5.980</td>\n",
       "      <td>6.000</td>\n",
       "      <td>5.774</td>\n",
       "      <td>5.814</td>\n",
       "      <td>5.814</td>\n",
       "      <td>4782000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Date   Open   High    Low  Close  Adj Close    Volume\n",
       "0   03-01-2012  5.788  5.900  5.530  5.616      5.616   4640500\n",
       "1   04-01-2012  5.642  5.734  5.500  5.542      5.542   3150500\n",
       "2   05-01-2012  5.552  5.586  5.370  5.424      5.424   5027500\n",
       "3   06-01-2012  5.440  5.558  5.282  5.382      5.382   4931500\n",
       "4   09-01-2012  5.400  5.498  5.224  5.450      5.450   4485000\n",
       "5   10-01-2012  5.488  5.552  5.450  5.524      5.524   3359000\n",
       "6   11-01-2012  5.524  5.676  5.460  5.646      5.646   3361500\n",
       "7   12-01-2012  5.696  5.724  5.562  5.650      5.650   3646500\n",
       "8   13-01-2012  5.680  5.700  4.528  4.558      4.558  27502000\n",
       "9   17-01-2012  5.324  5.468  5.282  5.320      5.320  23258000\n",
       "10  18-01-2012  5.338  5.376  5.250  5.362      5.362   6301000\n",
       "11  19-01-2012  5.438  5.548  5.322  5.352      5.352   6231500\n",
       "12  20-01-2012  5.380  5.400  5.280  5.320      5.320   3311500\n",
       "13  23-01-2012  5.362  5.442  5.320  5.354      5.354   2973000\n",
       "14  24-01-2012  5.326  5.536  5.288  5.484      5.484   4290000\n",
       "15  25-01-2012  5.454  5.602  5.410  5.594      5.594   3056000\n",
       "16  26-01-2012  5.614  5.916  5.600  5.788      5.788   6355500\n",
       "17  27-01-2012  5.700  5.944  5.700  5.866      5.866   3742000\n",
       "18  30-01-2012  5.898  5.922  5.706  5.914      5.914   3645000\n",
       "19  31-01-2012  5.980  6.000  5.774  5.814      5.814   4782000"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_prices.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "82e0260d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Adj Close</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2551</th>\n",
       "      <td>2022-02-22</td>\n",
       "      <td>834.130005</td>\n",
       "      <td>856.729980</td>\n",
       "      <td>801.099976</td>\n",
       "      <td>821.530029</td>\n",
       "      <td>821.530029</td>\n",
       "      <td>27762700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2552</th>\n",
       "      <td>2022-02-23</td>\n",
       "      <td>830.429993</td>\n",
       "      <td>835.299988</td>\n",
       "      <td>760.559998</td>\n",
       "      <td>764.039978</td>\n",
       "      <td>764.039978</td>\n",
       "      <td>31752300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2553</th>\n",
       "      <td>2022-02-24</td>\n",
       "      <td>700.390015</td>\n",
       "      <td>802.479980</td>\n",
       "      <td>700.000000</td>\n",
       "      <td>800.770020</td>\n",
       "      <td>800.770020</td>\n",
       "      <td>45107400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2554</th>\n",
       "      <td>2022-02-25</td>\n",
       "      <td>809.229980</td>\n",
       "      <td>819.500000</td>\n",
       "      <td>782.400024</td>\n",
       "      <td>809.869995</td>\n",
       "      <td>809.869995</td>\n",
       "      <td>25355900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2555</th>\n",
       "      <td>2022-02-28</td>\n",
       "      <td>815.010010</td>\n",
       "      <td>876.859985</td>\n",
       "      <td>814.710022</td>\n",
       "      <td>870.429993</td>\n",
       "      <td>870.429993</td>\n",
       "      <td>33002300</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Date        Open        High         Low       Close   Adj Close  \\\n",
       "2551 2022-02-22  834.130005  856.729980  801.099976  821.530029  821.530029   \n",
       "2552 2022-02-23  830.429993  835.299988  760.559998  764.039978  764.039978   \n",
       "2553 2022-02-24  700.390015  802.479980  700.000000  800.770020  800.770020   \n",
       "2554 2022-02-25  809.229980  819.500000  782.400024  809.869995  809.869995   \n",
       "2555 2022-02-28  815.010010  876.859985  814.710022  870.429993  870.429993   \n",
       "\n",
       "        Volume  \n",
       "2551  27762700  \n",
       "2552  31752300  \n",
       "2553  45107400  \n",
       "2554  25355900  \n",
       "2555  33002300  "
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_prices.tail(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "4ef2b42b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "17892"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_prices.size"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "b54e9a28",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2556 entries, 0 to 2555\n",
      "Data columns (total 7 columns):\n",
      " #   Column     Non-Null Count  Dtype  \n",
      "---  ------     --------------  -----  \n",
      " 0   Date       2556 non-null   object \n",
      " 1   Open       2556 non-null   float64\n",
      " 2   High       2556 non-null   float64\n",
      " 3   Low        2556 non-null   float64\n",
      " 4   Close      2556 non-null   float64\n",
      " 5   Adj Close  2556 non-null   float64\n",
      " 6   Volume     2556 non-null   int64  \n",
      "dtypes: float64(5), int64(1), object(1)\n",
      "memory usage: 139.9+ KB\n"
     ]
    }
   ],
   "source": [
    "df_prices.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e4ac753a",
   "metadata": {},
   "source": [
    "# Data Preprocessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "aba0a403",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2556 entries, 0 to 2555\n",
      "Data columns (total 7 columns):\n",
      " #   Column     Non-Null Count  Dtype         \n",
      "---  ------     --------------  -----         \n",
      " 0   Date       2556 non-null   datetime64[ns]\n",
      " 1   Open       2556 non-null   float64       \n",
      " 2   High       2556 non-null   float64       \n",
      " 3   Low        2556 non-null   float64       \n",
      " 4   Close      2556 non-null   float64       \n",
      " 5   Adj Close  2556 non-null   float64       \n",
      " 6   Volume     2556 non-null   int64         \n",
      "dtypes: datetime64[ns](1), float64(5), int64(1)\n",
      "memory usage: 139.9 KB\n"
     ]
    }
   ],
   "source": [
    "#Converting Date column to datetime datatype\n",
    "df_prices['Date'] = pd.to_datetime(df_prices['Date'])\n",
    "df_prices.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "ba510c03",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Adj Close</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2012-03-01</td>\n",
       "      <td>5.788</td>\n",
       "      <td>5.900</td>\n",
       "      <td>5.530</td>\n",
       "      <td>5.616</td>\n",
       "      <td>5.616</td>\n",
       "      <td>4640500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2012-04-01</td>\n",
       "      <td>5.642</td>\n",
       "      <td>5.734</td>\n",
       "      <td>5.500</td>\n",
       "      <td>5.542</td>\n",
       "      <td>5.542</td>\n",
       "      <td>3150500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2012-05-01</td>\n",
       "      <td>5.552</td>\n",
       "      <td>5.586</td>\n",
       "      <td>5.370</td>\n",
       "      <td>5.424</td>\n",
       "      <td>5.424</td>\n",
       "      <td>5027500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2012-06-01</td>\n",
       "      <td>5.440</td>\n",
       "      <td>5.558</td>\n",
       "      <td>5.282</td>\n",
       "      <td>5.382</td>\n",
       "      <td>5.382</td>\n",
       "      <td>4931500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2012-09-01</td>\n",
       "      <td>5.400</td>\n",
       "      <td>5.498</td>\n",
       "      <td>5.224</td>\n",
       "      <td>5.450</td>\n",
       "      <td>5.450</td>\n",
       "      <td>4485000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2012-10-01</td>\n",
       "      <td>5.488</td>\n",
       "      <td>5.552</td>\n",
       "      <td>5.450</td>\n",
       "      <td>5.524</td>\n",
       "      <td>5.524</td>\n",
       "      <td>3359000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2012-11-01</td>\n",
       "      <td>5.524</td>\n",
       "      <td>5.676</td>\n",
       "      <td>5.460</td>\n",
       "      <td>5.646</td>\n",
       "      <td>5.646</td>\n",
       "      <td>3361500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2012-12-01</td>\n",
       "      <td>5.696</td>\n",
       "      <td>5.724</td>\n",
       "      <td>5.562</td>\n",
       "      <td>5.650</td>\n",
       "      <td>5.650</td>\n",
       "      <td>3646500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2012-01-13</td>\n",
       "      <td>5.680</td>\n",
       "      <td>5.700</td>\n",
       "      <td>4.528</td>\n",
       "      <td>4.558</td>\n",
       "      <td>4.558</td>\n",
       "      <td>27502000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2012-01-17</td>\n",
       "      <td>5.324</td>\n",
       "      <td>5.468</td>\n",
       "      <td>5.282</td>\n",
       "      <td>5.320</td>\n",
       "      <td>5.320</td>\n",
       "      <td>23258000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2012-01-18</td>\n",
       "      <td>5.338</td>\n",
       "      <td>5.376</td>\n",
       "      <td>5.250</td>\n",
       "      <td>5.362</td>\n",
       "      <td>5.362</td>\n",
       "      <td>6301000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2012-01-19</td>\n",
       "      <td>5.438</td>\n",
       "      <td>5.548</td>\n",
       "      <td>5.322</td>\n",
       "      <td>5.352</td>\n",
       "      <td>5.352</td>\n",
       "      <td>6231500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2012-01-20</td>\n",
       "      <td>5.380</td>\n",
       "      <td>5.400</td>\n",
       "      <td>5.280</td>\n",
       "      <td>5.320</td>\n",
       "      <td>5.320</td>\n",
       "      <td>3311500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2012-01-23</td>\n",
       "      <td>5.362</td>\n",
       "      <td>5.442</td>\n",
       "      <td>5.320</td>\n",
       "      <td>5.354</td>\n",
       "      <td>5.354</td>\n",
       "      <td>2973000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2012-01-24</td>\n",
       "      <td>5.326</td>\n",
       "      <td>5.536</td>\n",
       "      <td>5.288</td>\n",
       "      <td>5.484</td>\n",
       "      <td>5.484</td>\n",
       "      <td>4290000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2012-01-25</td>\n",
       "      <td>5.454</td>\n",
       "      <td>5.602</td>\n",
       "      <td>5.410</td>\n",
       "      <td>5.594</td>\n",
       "      <td>5.594</td>\n",
       "      <td>3056000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2012-01-26</td>\n",
       "      <td>5.614</td>\n",
       "      <td>5.916</td>\n",
       "      <td>5.600</td>\n",
       "      <td>5.788</td>\n",
       "      <td>5.788</td>\n",
       "      <td>6355500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2012-01-27</td>\n",
       "      <td>5.700</td>\n",
       "      <td>5.944</td>\n",
       "      <td>5.700</td>\n",
       "      <td>5.866</td>\n",
       "      <td>5.866</td>\n",
       "      <td>3742000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2012-01-30</td>\n",
       "      <td>5.898</td>\n",
       "      <td>5.922</td>\n",
       "      <td>5.706</td>\n",
       "      <td>5.914</td>\n",
       "      <td>5.914</td>\n",
       "      <td>3645000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2012-01-31</td>\n",
       "      <td>5.980</td>\n",
       "      <td>6.000</td>\n",
       "      <td>5.774</td>\n",
       "      <td>5.814</td>\n",
       "      <td>5.814</td>\n",
       "      <td>4782000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Date   Open   High    Low  Close  Adj Close    Volume\n",
       "0  2012-03-01  5.788  5.900  5.530  5.616      5.616   4640500\n",
       "1  2012-04-01  5.642  5.734  5.500  5.542      5.542   3150500\n",
       "2  2012-05-01  5.552  5.586  5.370  5.424      5.424   5027500\n",
       "3  2012-06-01  5.440  5.558  5.282  5.382      5.382   4931500\n",
       "4  2012-09-01  5.400  5.498  5.224  5.450      5.450   4485000\n",
       "5  2012-10-01  5.488  5.552  5.450  5.524      5.524   3359000\n",
       "6  2012-11-01  5.524  5.676  5.460  5.646      5.646   3361500\n",
       "7  2012-12-01  5.696  5.724  5.562  5.650      5.650   3646500\n",
       "8  2012-01-13  5.680  5.700  4.528  4.558      4.558  27502000\n",
       "9  2012-01-17  5.324  5.468  5.282  5.320      5.320  23258000\n",
       "10 2012-01-18  5.338  5.376  5.250  5.362      5.362   6301000\n",
       "11 2012-01-19  5.438  5.548  5.322  5.352      5.352   6231500\n",
       "12 2012-01-20  5.380  5.400  5.280  5.320      5.320   3311500\n",
       "13 2012-01-23  5.362  5.442  5.320  5.354      5.354   2973000\n",
       "14 2012-01-24  5.326  5.536  5.288  5.484      5.484   4290000\n",
       "15 2012-01-25  5.454  5.602  5.410  5.594      5.594   3056000\n",
       "16 2012-01-26  5.614  5.916  5.600  5.788      5.788   6355500\n",
       "17 2012-01-27  5.700  5.944  5.700  5.866      5.866   3742000\n",
       "18 2012-01-30  5.898  5.922  5.706  5.914      5.914   3645000\n",
       "19 2012-01-31  5.980  6.000  5.774  5.814      5.814   4782000"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_prices.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "393ebf5f",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_prices.dropna(inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "008911c5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Adj Close</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2012-03-01</td>\n",
       "      <td>5.788</td>\n",
       "      <td>5.900</td>\n",
       "      <td>5.530</td>\n",
       "      <td>5.616</td>\n",
       "      <td>5.616</td>\n",
       "      <td>4640500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2012-04-01</td>\n",
       "      <td>5.642</td>\n",
       "      <td>5.734</td>\n",
       "      <td>5.500</td>\n",
       "      <td>5.542</td>\n",
       "      <td>5.542</td>\n",
       "      <td>3150500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2012-05-01</td>\n",
       "      <td>5.552</td>\n",
       "      <td>5.586</td>\n",
       "      <td>5.370</td>\n",
       "      <td>5.424</td>\n",
       "      <td>5.424</td>\n",
       "      <td>5027500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2012-06-01</td>\n",
       "      <td>5.440</td>\n",
       "      <td>5.558</td>\n",
       "      <td>5.282</td>\n",
       "      <td>5.382</td>\n",
       "      <td>5.382</td>\n",
       "      <td>4931500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2012-09-01</td>\n",
       "      <td>5.400</td>\n",
       "      <td>5.498</td>\n",
       "      <td>5.224</td>\n",
       "      <td>5.450</td>\n",
       "      <td>5.450</td>\n",
       "      <td>4485000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2012-10-01</td>\n",
       "      <td>5.488</td>\n",
       "      <td>5.552</td>\n",
       "      <td>5.450</td>\n",
       "      <td>5.524</td>\n",
       "      <td>5.524</td>\n",
       "      <td>3359000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2012-11-01</td>\n",
       "      <td>5.524</td>\n",
       "      <td>5.676</td>\n",
       "      <td>5.460</td>\n",
       "      <td>5.646</td>\n",
       "      <td>5.646</td>\n",
       "      <td>3361500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2012-12-01</td>\n",
       "      <td>5.696</td>\n",
       "      <td>5.724</td>\n",
       "      <td>5.562</td>\n",
       "      <td>5.650</td>\n",
       "      <td>5.650</td>\n",
       "      <td>3646500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2012-01-13</td>\n",
       "      <td>5.680</td>\n",
       "      <td>5.700</td>\n",
       "      <td>4.528</td>\n",
       "      <td>4.558</td>\n",
       "      <td>4.558</td>\n",
       "      <td>27502000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2012-01-17</td>\n",
       "      <td>5.324</td>\n",
       "      <td>5.468</td>\n",
       "      <td>5.282</td>\n",
       "      <td>5.320</td>\n",
       "      <td>5.320</td>\n",
       "      <td>23258000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2012-01-18</td>\n",
       "      <td>5.338</td>\n",
       "      <td>5.376</td>\n",
       "      <td>5.250</td>\n",
       "      <td>5.362</td>\n",
       "      <td>5.362</td>\n",
       "      <td>6301000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2012-01-19</td>\n",
       "      <td>5.438</td>\n",
       "      <td>5.548</td>\n",
       "      <td>5.322</td>\n",
       "      <td>5.352</td>\n",
       "      <td>5.352</td>\n",
       "      <td>6231500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2012-01-20</td>\n",
       "      <td>5.380</td>\n",
       "      <td>5.400</td>\n",
       "      <td>5.280</td>\n",
       "      <td>5.320</td>\n",
       "      <td>5.320</td>\n",
       "      <td>3311500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2012-01-23</td>\n",
       "      <td>5.362</td>\n",
       "      <td>5.442</td>\n",
       "      <td>5.320</td>\n",
       "      <td>5.354</td>\n",
       "      <td>5.354</td>\n",
       "      <td>2973000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2012-01-24</td>\n",
       "      <td>5.326</td>\n",
       "      <td>5.536</td>\n",
       "      <td>5.288</td>\n",
       "      <td>5.484</td>\n",
       "      <td>5.484</td>\n",
       "      <td>4290000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2012-01-25</td>\n",
       "      <td>5.454</td>\n",
       "      <td>5.602</td>\n",
       "      <td>5.410</td>\n",
       "      <td>5.594</td>\n",
       "      <td>5.594</td>\n",
       "      <td>3056000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2012-01-26</td>\n",
       "      <td>5.614</td>\n",
       "      <td>5.916</td>\n",
       "      <td>5.600</td>\n",
       "      <td>5.788</td>\n",
       "      <td>5.788</td>\n",
       "      <td>6355500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2012-01-27</td>\n",
       "      <td>5.700</td>\n",
       "      <td>5.944</td>\n",
       "      <td>5.700</td>\n",
       "      <td>5.866</td>\n",
       "      <td>5.866</td>\n",
       "      <td>3742000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2012-01-30</td>\n",
       "      <td>5.898</td>\n",
       "      <td>5.922</td>\n",
       "      <td>5.706</td>\n",
       "      <td>5.914</td>\n",
       "      <td>5.914</td>\n",
       "      <td>3645000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2012-01-31</td>\n",
       "      <td>5.980</td>\n",
       "      <td>6.000</td>\n",
       "      <td>5.774</td>\n",
       "      <td>5.814</td>\n",
       "      <td>5.814</td>\n",
       "      <td>4782000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Date   Open   High    Low  Close  Adj Close    Volume\n",
       "0  2012-03-01  5.788  5.900  5.530  5.616      5.616   4640500\n",
       "1  2012-04-01  5.642  5.734  5.500  5.542      5.542   3150500\n",
       "2  2012-05-01  5.552  5.586  5.370  5.424      5.424   5027500\n",
       "3  2012-06-01  5.440  5.558  5.282  5.382      5.382   4931500\n",
       "4  2012-09-01  5.400  5.498  5.224  5.450      5.450   4485000\n",
       "5  2012-10-01  5.488  5.552  5.450  5.524      5.524   3359000\n",
       "6  2012-11-01  5.524  5.676  5.460  5.646      5.646   3361500\n",
       "7  2012-12-01  5.696  5.724  5.562  5.650      5.650   3646500\n",
       "8  2012-01-13  5.680  5.700  4.528  4.558      4.558  27502000\n",
       "9  2012-01-17  5.324  5.468  5.282  5.320      5.320  23258000\n",
       "10 2012-01-18  5.338  5.376  5.250  5.362      5.362   6301000\n",
       "11 2012-01-19  5.438  5.548  5.322  5.352      5.352   6231500\n",
       "12 2012-01-20  5.380  5.400  5.280  5.320      5.320   3311500\n",
       "13 2012-01-23  5.362  5.442  5.320  5.354      5.354   2973000\n",
       "14 2012-01-24  5.326  5.536  5.288  5.484      5.484   4290000\n",
       "15 2012-01-25  5.454  5.602  5.410  5.594      5.594   3056000\n",
       "16 2012-01-26  5.614  5.916  5.600  5.788      5.788   6355500\n",
       "17 2012-01-27  5.700  5.944  5.700  5.866      5.866   3742000\n",
       "18 2012-01-30  5.898  5.922  5.706  5.914      5.914   3645000\n",
       "19 2012-01-31  5.980  6.000  5.774  5.814      5.814   4782000"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_prices.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "5bef9791",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Stock Closing price fluctuation')"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12, 7))\n",
    "df_prices['Close'].plot(color =\"b\")\n",
    "plt.ylabel('Close')\n",
    "plt.title(\"Stock Closing price fluctuation\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "7f97fbbf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x25d4a01a2e0>"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Plotting moving average\n",
    "close = df_prices['Close']\n",
    "ma = close.rolling(window= 50).mean()\n",
    "std = close.rolling(window=50).std()\n",
    "\n",
    "plt.figure(figsize=(12, 7))\n",
    "df_prices['Close'].plot(color = 'b', label = 'Close')\n",
    "ma.plot(color = 'r', label = 'Rolling Mean')\n",
    "std.plot(label = 'Rolling Standard Deviation')\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "e0f42ee3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Returns')"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Plotting returns\n",
    "returns = close / close.shift(1) - 1\n",
    "\n",
    "plt.figure(figsize = (10,6))\n",
    "returns.plot(label='Return', color = 'g')\n",
    "plt.title(\"Returns\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "ea1fb762",
   "metadata": {},
   "outputs": [],
   "source": [
    "train = df_prices[:1000]\n",
    "test = df_prices[1000:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "fd4bb30c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Adj Close</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2012-03-01</td>\n",
       "      <td>5.788</td>\n",
       "      <td>5.900</td>\n",
       "      <td>5.530</td>\n",
       "      <td>5.616</td>\n",
       "      <td>5.616</td>\n",
       "      <td>4640500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2012-04-01</td>\n",
       "      <td>5.642</td>\n",
       "      <td>5.734</td>\n",
       "      <td>5.500</td>\n",
       "      <td>5.542</td>\n",
       "      <td>5.542</td>\n",
       "      <td>3150500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2012-05-01</td>\n",
       "      <td>5.552</td>\n",
       "      <td>5.586</td>\n",
       "      <td>5.370</td>\n",
       "      <td>5.424</td>\n",
       "      <td>5.424</td>\n",
       "      <td>5027500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2012-06-01</td>\n",
       "      <td>5.440</td>\n",
       "      <td>5.558</td>\n",
       "      <td>5.282</td>\n",
       "      <td>5.382</td>\n",
       "      <td>5.382</td>\n",
       "      <td>4931500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2012-09-01</td>\n",
       "      <td>5.400</td>\n",
       "      <td>5.498</td>\n",
       "      <td>5.224</td>\n",
       "      <td>5.450</td>\n",
       "      <td>5.450</td>\n",
       "      <td>4485000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2012-10-01</td>\n",
       "      <td>5.488</td>\n",
       "      <td>5.552</td>\n",
       "      <td>5.450</td>\n",
       "      <td>5.524</td>\n",
       "      <td>5.524</td>\n",
       "      <td>3359000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2012-11-01</td>\n",
       "      <td>5.524</td>\n",
       "      <td>5.676</td>\n",
       "      <td>5.460</td>\n",
       "      <td>5.646</td>\n",
       "      <td>5.646</td>\n",
       "      <td>3361500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2012-12-01</td>\n",
       "      <td>5.696</td>\n",
       "      <td>5.724</td>\n",
       "      <td>5.562</td>\n",
       "      <td>5.650</td>\n",
       "      <td>5.650</td>\n",
       "      <td>3646500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2012-01-13</td>\n",
       "      <td>5.680</td>\n",
       "      <td>5.700</td>\n",
       "      <td>4.528</td>\n",
       "      <td>4.558</td>\n",
       "      <td>4.558</td>\n",
       "      <td>27502000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2012-01-17</td>\n",
       "      <td>5.324</td>\n",
       "      <td>5.468</td>\n",
       "      <td>5.282</td>\n",
       "      <td>5.320</td>\n",
       "      <td>5.320</td>\n",
       "      <td>23258000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2012-01-18</td>\n",
       "      <td>5.338</td>\n",
       "      <td>5.376</td>\n",
       "      <td>5.250</td>\n",
       "      <td>5.362</td>\n",
       "      <td>5.362</td>\n",
       "      <td>6301000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2012-01-19</td>\n",
       "      <td>5.438</td>\n",
       "      <td>5.548</td>\n",
       "      <td>5.322</td>\n",
       "      <td>5.352</td>\n",
       "      <td>5.352</td>\n",
       "      <td>6231500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2012-01-20</td>\n",
       "      <td>5.380</td>\n",
       "      <td>5.400</td>\n",
       "      <td>5.280</td>\n",
       "      <td>5.320</td>\n",
       "      <td>5.320</td>\n",
       "      <td>3311500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2012-01-23</td>\n",
       "      <td>5.362</td>\n",
       "      <td>5.442</td>\n",
       "      <td>5.320</td>\n",
       "      <td>5.354</td>\n",
       "      <td>5.354</td>\n",
       "      <td>2973000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2012-01-24</td>\n",
       "      <td>5.326</td>\n",
       "      <td>5.536</td>\n",
       "      <td>5.288</td>\n",
       "      <td>5.484</td>\n",
       "      <td>5.484</td>\n",
       "      <td>4290000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2012-01-25</td>\n",
       "      <td>5.454</td>\n",
       "      <td>5.602</td>\n",
       "      <td>5.410</td>\n",
       "      <td>5.594</td>\n",
       "      <td>5.594</td>\n",
       "      <td>3056000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2012-01-26</td>\n",
       "      <td>5.614</td>\n",
       "      <td>5.916</td>\n",
       "      <td>5.600</td>\n",
       "      <td>5.788</td>\n",
       "      <td>5.788</td>\n",
       "      <td>6355500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2012-01-27</td>\n",
       "      <td>5.700</td>\n",
       "      <td>5.944</td>\n",
       "      <td>5.700</td>\n",
       "      <td>5.866</td>\n",
       "      <td>5.866</td>\n",
       "      <td>3742000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2012-01-30</td>\n",
       "      <td>5.898</td>\n",
       "      <td>5.922</td>\n",
       "      <td>5.706</td>\n",
       "      <td>5.914</td>\n",
       "      <td>5.914</td>\n",
       "      <td>3645000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2012-01-31</td>\n",
       "      <td>5.980</td>\n",
       "      <td>6.000</td>\n",
       "      <td>5.774</td>\n",
       "      <td>5.814</td>\n",
       "      <td>5.814</td>\n",
       "      <td>4782000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Date   Open   High    Low  Close  Adj Close    Volume\n",
       "0  2012-03-01  5.788  5.900  5.530  5.616      5.616   4640500\n",
       "1  2012-04-01  5.642  5.734  5.500  5.542      5.542   3150500\n",
       "2  2012-05-01  5.552  5.586  5.370  5.424      5.424   5027500\n",
       "3  2012-06-01  5.440  5.558  5.282  5.382      5.382   4931500\n",
       "4  2012-09-01  5.400  5.498  5.224  5.450      5.450   4485000\n",
       "5  2012-10-01  5.488  5.552  5.450  5.524      5.524   3359000\n",
       "6  2012-11-01  5.524  5.676  5.460  5.646      5.646   3361500\n",
       "7  2012-12-01  5.696  5.724  5.562  5.650      5.650   3646500\n",
       "8  2012-01-13  5.680  5.700  4.528  4.558      4.558  27502000\n",
       "9  2012-01-17  5.324  5.468  5.282  5.320      5.320  23258000\n",
       "10 2012-01-18  5.338  5.376  5.250  5.362      5.362   6301000\n",
       "11 2012-01-19  5.438  5.548  5.322  5.352      5.352   6231500\n",
       "12 2012-01-20  5.380  5.400  5.280  5.320      5.320   3311500\n",
       "13 2012-01-23  5.362  5.442  5.320  5.354      5.354   2973000\n",
       "14 2012-01-24  5.326  5.536  5.288  5.484      5.484   4290000\n",
       "15 2012-01-25  5.454  5.602  5.410  5.594      5.594   3056000\n",
       "16 2012-01-26  5.614  5.916  5.600  5.788      5.788   6355500\n",
       "17 2012-01-27  5.700  5.944  5.700  5.866      5.866   3742000\n",
       "18 2012-01-30  5.898  5.922  5.706  5.914      5.914   3645000\n",
       "19 2012-01-31  5.980  6.000  5.774  5.814      5.814   4782000"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "955fc124",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Adj Close</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1000</th>\n",
       "      <td>2015-12-23</td>\n",
       "      <td>46.436001</td>\n",
       "      <td>46.689999</td>\n",
       "      <td>45.625999</td>\n",
       "      <td>45.939999</td>\n",
       "      <td>45.939999</td>\n",
       "      <td>7775000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1001</th>\n",
       "      <td>2015-12-24</td>\n",
       "      <td>46.112000</td>\n",
       "      <td>46.375999</td>\n",
       "      <td>45.655998</td>\n",
       "      <td>46.113998</td>\n",
       "      <td>46.113998</td>\n",
       "      <td>3540000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1002</th>\n",
       "      <td>2015-12-28</td>\n",
       "      <td>46.298000</td>\n",
       "      <td>46.396000</td>\n",
       "      <td>45.108002</td>\n",
       "      <td>45.790001</td>\n",
       "      <td>45.790001</td>\n",
       "      <td>9506500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1003</th>\n",
       "      <td>2015-12-29</td>\n",
       "      <td>46.012001</td>\n",
       "      <td>47.543999</td>\n",
       "      <td>45.910000</td>\n",
       "      <td>47.438000</td>\n",
       "      <td>47.438000</td>\n",
       "      <td>12031500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1004</th>\n",
       "      <td>2015-12-30</td>\n",
       "      <td>47.320000</td>\n",
       "      <td>48.726002</td>\n",
       "      <td>47.133999</td>\n",
       "      <td>47.618000</td>\n",
       "      <td>47.618000</td>\n",
       "      <td>18489500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1005</th>\n",
       "      <td>2015-12-31</td>\n",
       "      <td>47.702000</td>\n",
       "      <td>48.689999</td>\n",
       "      <td>47.674000</td>\n",
       "      <td>48.001999</td>\n",
       "      <td>48.001999</td>\n",
       "      <td>13575000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1006</th>\n",
       "      <td>2016-04-01</td>\n",
       "      <td>46.144001</td>\n",
       "      <td>46.276001</td>\n",
       "      <td>43.799999</td>\n",
       "      <td>44.681999</td>\n",
       "      <td>44.681999</td>\n",
       "      <td>34135500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1007</th>\n",
       "      <td>2016-05-01</td>\n",
       "      <td>45.271999</td>\n",
       "      <td>45.377998</td>\n",
       "      <td>44.000000</td>\n",
       "      <td>44.686001</td>\n",
       "      <td>44.686001</td>\n",
       "      <td>15934000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1008</th>\n",
       "      <td>2016-06-01</td>\n",
       "      <td>44.000000</td>\n",
       "      <td>44.009998</td>\n",
       "      <td>43.195999</td>\n",
       "      <td>43.807999</td>\n",
       "      <td>43.807999</td>\n",
       "      <td>18895500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1009</th>\n",
       "      <td>2016-07-01</td>\n",
       "      <td>42.838001</td>\n",
       "      <td>43.688000</td>\n",
       "      <td>42.734001</td>\n",
       "      <td>43.130001</td>\n",
       "      <td>43.130001</td>\n",
       "      <td>17771500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1010</th>\n",
       "      <td>2016-08-01</td>\n",
       "      <td>43.571999</td>\n",
       "      <td>44.088001</td>\n",
       "      <td>42.153999</td>\n",
       "      <td>42.200001</td>\n",
       "      <td>42.200001</td>\n",
       "      <td>18140500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1011</th>\n",
       "      <td>2016-11-01</td>\n",
       "      <td>42.801998</td>\n",
       "      <td>42.889999</td>\n",
       "      <td>40.599998</td>\n",
       "      <td>41.570000</td>\n",
       "      <td>41.570000</td>\n",
       "      <td>20457000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1012</th>\n",
       "      <td>2016-12-01</td>\n",
       "      <td>42.320000</td>\n",
       "      <td>42.748001</td>\n",
       "      <td>41.062000</td>\n",
       "      <td>41.993999</td>\n",
       "      <td>41.993999</td>\n",
       "      <td>15459500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1013</th>\n",
       "      <td>2016-01-13</td>\n",
       "      <td>42.402000</td>\n",
       "      <td>42.529999</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>40.062000</td>\n",
       "      <td>40.062000</td>\n",
       "      <td>20632000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1014</th>\n",
       "      <td>2016-01-14</td>\n",
       "      <td>40.442001</td>\n",
       "      <td>42.000000</td>\n",
       "      <td>38.675999</td>\n",
       "      <td>41.236000</td>\n",
       "      <td>41.236000</td>\n",
       "      <td>32453500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1015</th>\n",
       "      <td>2016-01-15</td>\n",
       "      <td>39.793999</td>\n",
       "      <td>41.014000</td>\n",
       "      <td>39.450001</td>\n",
       "      <td>40.998001</td>\n",
       "      <td>40.998001</td>\n",
       "      <td>27893000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1016</th>\n",
       "      <td>2016-01-19</td>\n",
       "      <td>41.742001</td>\n",
       "      <td>42.094002</td>\n",
       "      <td>40.155998</td>\n",
       "      <td>40.944000</td>\n",
       "      <td>40.944000</td>\n",
       "      <td>20193500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1017</th>\n",
       "      <td>2016-01-20</td>\n",
       "      <td>39.880001</td>\n",
       "      <td>40.256001</td>\n",
       "      <td>38.250000</td>\n",
       "      <td>39.740002</td>\n",
       "      <td>39.740002</td>\n",
       "      <td>29193000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1018</th>\n",
       "      <td>2016-01-21</td>\n",
       "      <td>40.310001</td>\n",
       "      <td>40.646000</td>\n",
       "      <td>39.004002</td>\n",
       "      <td>39.993999</td>\n",
       "      <td>39.993999</td>\n",
       "      <td>15831000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1019</th>\n",
       "      <td>2016-01-22</td>\n",
       "      <td>40.959999</td>\n",
       "      <td>41.099998</td>\n",
       "      <td>39.806000</td>\n",
       "      <td>40.509998</td>\n",
       "      <td>40.509998</td>\n",
       "      <td>15620500</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Date       Open       High        Low      Close  Adj Close  \\\n",
       "1000 2015-12-23  46.436001  46.689999  45.625999  45.939999  45.939999   \n",
       "1001 2015-12-24  46.112000  46.375999  45.655998  46.113998  46.113998   \n",
       "1002 2015-12-28  46.298000  46.396000  45.108002  45.790001  45.790001   \n",
       "1003 2015-12-29  46.012001  47.543999  45.910000  47.438000  47.438000   \n",
       "1004 2015-12-30  47.320000  48.726002  47.133999  47.618000  47.618000   \n",
       "1005 2015-12-31  47.702000  48.689999  47.674000  48.001999  48.001999   \n",
       "1006 2016-04-01  46.144001  46.276001  43.799999  44.681999  44.681999   \n",
       "1007 2016-05-01  45.271999  45.377998  44.000000  44.686001  44.686001   \n",
       "1008 2016-06-01  44.000000  44.009998  43.195999  43.807999  43.807999   \n",
       "1009 2016-07-01  42.838001  43.688000  42.734001  43.130001  43.130001   \n",
       "1010 2016-08-01  43.571999  44.088001  42.153999  42.200001  42.200001   \n",
       "1011 2016-11-01  42.801998  42.889999  40.599998  41.570000  41.570000   \n",
       "1012 2016-12-01  42.320000  42.748001  41.062000  41.993999  41.993999   \n",
       "1013 2016-01-13  42.402000  42.529999  40.000000  40.062000  40.062000   \n",
       "1014 2016-01-14  40.442001  42.000000  38.675999  41.236000  41.236000   \n",
       "1015 2016-01-15  39.793999  41.014000  39.450001  40.998001  40.998001   \n",
       "1016 2016-01-19  41.742001  42.094002  40.155998  40.944000  40.944000   \n",
       "1017 2016-01-20  39.880001  40.256001  38.250000  39.740002  39.740002   \n",
       "1018 2016-01-21  40.310001  40.646000  39.004002  39.993999  39.993999   \n",
       "1019 2016-01-22  40.959999  41.099998  39.806000  40.509998  40.509998   \n",
       "\n",
       "        Volume  \n",
       "1000   7775000  \n",
       "1001   3540000  \n",
       "1002   9506500  \n",
       "1003  12031500  \n",
       "1004  18489500  \n",
       "1005  13575000  \n",
       "1006  34135500  \n",
       "1007  15934000  \n",
       "1008  18895500  \n",
       "1009  17771500  \n",
       "1010  18140500  \n",
       "1011  20457000  \n",
       "1012  15459500  \n",
       "1013  20632000  \n",
       "1014  32453500  \n",
       "1015  27893000  \n",
       "1016  20193500  \n",
       "1017  29193000  \n",
       "1018  15831000  \n",
       "1019  15620500  "
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "cb05989f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1000</th>\n",
       "      <td>2015-12-23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1001</th>\n",
       "      <td>2015-12-24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1002</th>\n",
       "      <td>2015-12-28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1003</th>\n",
       "      <td>2015-12-29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1004</th>\n",
       "      <td>2015-12-30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2551</th>\n",
       "      <td>2022-02-22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2552</th>\n",
       "      <td>2022-02-23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2553</th>\n",
       "      <td>2022-02-24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2554</th>\n",
       "      <td>2022-02-25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2555</th>\n",
       "      <td>2022-02-28</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1556 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Date\n",
       "1000 2015-12-23\n",
       "1001 2015-12-24\n",
       "1002 2015-12-28\n",
       "1003 2015-12-29\n",
       "1004 2015-12-30\n",
       "...         ...\n",
       "2551 2022-02-22\n",
       "2552 2022-02-23\n",
       "2553 2022-02-24\n",
       "2554 2022-02-25\n",
       "2555 2022-02-28\n",
       "\n",
       "[1556 rows x 1 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test[[\"Date\"]]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "92672da7",
   "metadata": {},
   "source": [
    "Basically stationarity means that a time series has a constant mean and constant variance over time."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "adb8ef07",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Results of dickey fuller test\n",
      "ADF Test Statistic : -1.131065787728813\n",
      "p-value : 0.7025256068061083\n",
      "#Lags Used : 0\n",
      "Number of Observations Used : 999\n",
      "Weak evidence against null hypothesis, time series is non-stationary \n"
     ]
    }
   ],
   "source": [
    "#Stationarity test\n",
    "def test_stationarity(timeseries):\n",
    "\n",
    " #Determing rolling statistics\n",
    " rolmean = timeseries.rolling(20).mean()\n",
    " rolstd = timeseries.rolling(20).std()\n",
    "\n",
    " #Plot rolling statistics:\n",
    " plt.figure(figsize = (10,8))\n",
    " plt.plot(timeseries, color = 'y', label = 'original')\n",
    " plt.plot(rolmean, color = 'r', label = 'rolling mean')\n",
    " plt.plot(rolstd, color = 'b', label = 'rolling std')\n",
    " plt.xlabel('Date')\n",
    " plt.legend()\n",
    " plt.title('Rolling Mean and Standard Deviation',  fontsize = 20)\n",
    " plt.show(block = False)\n",
    " \n",
    " print('Results of dickey fuller test')\n",
    " result = adfuller(timeseries, autolag = 'AIC')\n",
    " labels = ['ADF Test Statistic','p-value','#Lags Used','Number of Observations Used']\n",
    " for value,label in zip(result, labels):\n",
    "   print(label+' : '+str(value) )\n",
    " if result[1] <= 0.05:\n",
    "   print(\"Strong evidence against the null hypothesis(Ho), reject the null hypothesis. Data is stationary\")\n",
    " else:\n",
    "   print(\"Weak evidence against null hypothesis, time series is non-stationary \")\n",
    "test_stationarity(train['Close'])  #plotting the original, rolling mean and rolling std of the training dataset with \"close\"\n",
    "# attribute."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "a5259915",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Results of dickey fuller test\n",
      "ADF Test Statistic : -0.2439841057327465\n",
      "p-value : 0.9330716982800162\n",
      "#Lags Used : 24\n",
      "Number of Observations Used : 1531\n",
      "Weak evidence against null hypothesis, time series is non-stationary \n"
     ]
    }
   ],
   "source": [
    "test_stationarity(test[\"Close\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "d93ae73c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x25d4a68e460>]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "train_log = np.log(train['Close']) \n",
    "test_log = np.log(test['Close'])\n",
    "\n",
    "mav = train_log.rolling(24).mean() # moving average mean - Rolling() function\n",
    "plt.figure(figsize = (10,6))\n",
    "plt.plot(train_log) \n",
    "plt.plot(mav, color = 'red') "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "ff8fea56",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       5.616000\n",
       "1       5.542000\n",
       "2       5.424000\n",
       "3       5.382000\n",
       "4       5.450000\n",
       "         ...    \n",
       "995    46.902000\n",
       "996    46.678001\n",
       "997    46.091999\n",
       "998    46.512001\n",
       "999    45.990002\n",
       "Name: Close, Length: 1000, dtype: float64"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train['Close']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "441ccf96",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      1.725620\n",
       "1      1.712355\n",
       "2      1.690834\n",
       "3      1.683060\n",
       "4      1.695616\n",
       "         ...   \n",
       "995    3.848060\n",
       "996    3.843273\n",
       "997    3.830639\n",
       "998    3.839710\n",
       "999    3.828424\n",
       "Name: Close, Length: 1000, dtype: float64"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_log = np.log(train['Close']) \n",
    "train_log"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "b8acf63a",
   "metadata": {},
   "outputs": [],
   "source": [
    "train_log.dropna(inplace = True)\n",
    "test_log.dropna(inplace = True)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "08f99050",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1000"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_log.size"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "94e4eb60",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1556"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_log.size"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "c7dd77ad",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Results of dickey fuller test\n",
      "ADF Test Statistic : -1.2776243748509908\n",
      "p-value : 0.6393460137814411\n",
      "#Lags Used : 0\n",
      "Number of Observations Used : 999\n",
      "Weak evidence against null hypothesis, time series is non-stationary \n"
     ]
    }
   ],
   "source": [
    "test_stationarity(train_log)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "fe539d31",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Results of dickey fuller test\n",
      "ADF Test Statistic : -5.707589525285358\n",
      "p-value : 7.426441194181218e-07\n",
      "#Lags Used : 0\n",
      "Number of Observations Used : 976\n",
      "Strong evidence against the null hypothesis(Ho), reject the null hypothesis. Data is stationary\n"
     ]
    }
   ],
   "source": [
    "train_log_diff = train_log - mav\n",
    "train_log_diff.dropna(inplace = True)\n",
    "\n",
    "test_stationarity(train_log_diff)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "65c81213",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Performing stepwise search to minimize aic\n",
      " ARIMA(2,1,2)(0,0,0)[0] intercept   : AIC=-3955.372, Time=1.83 sec\n",
      " ARIMA(0,1,0)(0,0,0)[0] intercept   : AIC=-3961.141, Time=0.41 sec\n",
      " ARIMA(1,1,0)(0,0,0)[0] intercept   : AIC=-3959.887, Time=0.30 sec\n",
      " ARIMA(0,1,1)(0,0,0)[0] intercept   : AIC=-3959.948, Time=0.81 sec\n",
      " ARIMA(0,1,0)(0,0,0)[0]             : AIC=-3959.147, Time=0.24 sec\n",
      " ARIMA(1,1,1)(0,0,0)[0] intercept   : AIC=-3958.187, Time=2.32 sec\n",
      "\n",
      "Best model:  ARIMA(0,1,0)(0,0,0)[0] intercept\n",
      "Total fit time: 5.932 seconds\n"
     ]
    }
   ],
   "source": [
    "#Using auto arima to make predictions using log data\n",
    "from pmdarima import auto_arima\n",
    "model = auto_arima(train_log, trace = True, error_action = 'ignore', suppress_warnings = True)\n",
    "model.fit(train_log)\n",
    "predictions = model.predict(n_periods = len(test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "fc8d6286",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Prediction</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1000</th>\n",
       "      <td>3.830529</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1001</th>\n",
       "      <td>3.832634</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1002</th>\n",
       "      <td>3.834739</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1003</th>\n",
       "      <td>3.836844</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1004</th>\n",
       "      <td>3.838948</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2551</th>\n",
       "      <td>7.095193</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2552</th>\n",
       "      <td>7.097298</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2553</th>\n",
       "      <td>7.099403</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2554</th>\n",
       "      <td>7.101508</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2555</th>\n",
       "      <td>7.103612</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1556 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Prediction\n",
       "1000    3.830529\n",
       "1001    3.832634\n",
       "1002    3.834739\n",
       "1003    3.836844\n",
       "1004    3.838948\n",
       "...          ...\n",
       "2551    7.095193\n",
       "2552    7.097298\n",
       "2553    7.099403\n",
       "2554    7.101508\n",
       "2555    7.103612\n",
       "\n",
       "[1556 rows x 1 columns]"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predictions = pd.DataFrame(predictions,index = test_log.index,columns=['Prediction'])\n",
    "predictions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "e4b915a8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Actual Stock Price')"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(train_log, label='Train')\n",
    "plt.plot(test_log, label='Test')\n",
    "plt.plot(predictions, label='Prediction', color =\"r\")  # the prediction line is shown by the red line\n",
    "plt.title('TSLA Stock Price Prediction')\n",
    "plt.xlabel('Time')\n",
    "plt.ylabel('Actual Stock Price')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "01c6948a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RMSE :  0.9261868438225745\n"
     ]
    }
   ],
   "source": [
    "#Calculating error\n",
    "rms = np.sqrt(mean_squared_error(test_log,predictions))\n",
    "print(\"RMSE : \", rms)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "36a3953d",
   "metadata": {},
   "source": [
    "# SENTIMENTAL ANALYSIS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "ab79ab5d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Category</th>\n",
       "      <th>News</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>03-01-2012</td>\n",
       "      <td>unknown</td>\n",
       "      <td>Status quo will not be disturbed at Ayodhya; s...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>04-01-2012</td>\n",
       "      <td>unknown</td>\n",
       "      <td>Fissures in Hurriyat over Pak visit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>05-01-2012</td>\n",
       "      <td>unknown</td>\n",
       "      <td>America's unwanted heading for India?</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>06-01-2012</td>\n",
       "      <td>unknown</td>\n",
       "      <td>For bigwigs; it is destination Goa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>09-01-2012</td>\n",
       "      <td>unknown</td>\n",
       "      <td>Extra buses to clear tourist traffic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2551</th>\n",
       "      <td>22-02-2022</td>\n",
       "      <td>unknown</td>\n",
       "      <td>Konkan Rly special trains between April and July</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2552</th>\n",
       "      <td>23-02-2022</td>\n",
       "      <td>unknown</td>\n",
       "      <td>Goa plans courts on economic offences</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2553</th>\n",
       "      <td>24-02-2022</td>\n",
       "      <td>unknown</td>\n",
       "      <td>Companies grab govt land; Opposition protests</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2554</th>\n",
       "      <td>25-02-2022</td>\n",
       "      <td>unknown</td>\n",
       "      <td>TMC resolution demands ouster of Chidambaram</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2555</th>\n",
       "      <td>28-02-2022</td>\n",
       "      <td>unknown</td>\n",
       "      <td>DMK may face fresh trouble with seat sharing</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2556 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Date Category                                               News\n",
       "0     03-01-2012  unknown  Status quo will not be disturbed at Ayodhya; s...\n",
       "1     04-01-2012  unknown                Fissures in Hurriyat over Pak visit\n",
       "2     05-01-2012  unknown              America's unwanted heading for India?\n",
       "3     06-01-2012  unknown                 For bigwigs; it is destination Goa\n",
       "4     09-01-2012  unknown               Extra buses to clear tourist traffic\n",
       "...          ...      ...                                                ...\n",
       "2551  22-02-2022  unknown   Konkan Rly special trains between April and July\n",
       "2552  23-02-2022  unknown              Goa plans courts on economic offences\n",
       "2553  24-02-2022  unknown      Companies grab govt land; Opposition protests\n",
       "2554  25-02-2022  unknown       TMC resolution demands ouster of Chidambaram\n",
       "2555  28-02-2022  unknown       DMK may face fresh trouble with seat sharing\n",
       "\n",
       "[2556 rows x 3 columns]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cols = ['Date','Category','News']\n",
    "df_news = pd.read_csv('india-news-headlines.csv', names = cols)\n",
    "df_news"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "df89ff2b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 2555 entries, 1 to 2555\n",
      "Data columns (total 2 columns):\n",
      " #   Column  Non-Null Count  Dtype \n",
      "---  ------  --------------  ----- \n",
      " 0   Date    2555 non-null   object\n",
      " 1   News    2555 non-null   object\n",
      "dtypes: object(2)\n",
      "memory usage: 59.9+ KB\n"
     ]
    }
   ],
   "source": [
    "df_news.drop(0, inplace=True)\n",
    "df_news.drop('Category', axis = 1, inplace=True)\n",
    "df_news.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "45ef41a2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>News</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>04-01-2012</td>\n",
       "      <td>Fissures in Hurriyat over Pak visit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>05-01-2012</td>\n",
       "      <td>America's unwanted heading for India?</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>06-01-2012</td>\n",
       "      <td>For bigwigs; it is destination Goa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>09-01-2012</td>\n",
       "      <td>Extra buses to clear tourist traffic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>10-01-2012</td>\n",
       "      <td>Dilute the power of transfers; says Riberio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>11-01-2012</td>\n",
       "      <td>Focus shifts to teaching of Hindi</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>12-01-2012</td>\n",
       "      <td>IT will become compulsory in schools</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>13-01-2012</td>\n",
       "      <td>Move to stop freedom fighters' pension flayed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>17-01-2012</td>\n",
       "      <td>Gilani claims he applied for passport 2 years ago</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>18-01-2012</td>\n",
       "      <td>Parivar dismisses PM's warning</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>19-01-2012</td>\n",
       "      <td>India; Pak exchange lists of N-plants</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>20-01-2012</td>\n",
       "      <td>Will Qureshi's return really help the govt?</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>23-01-2012</td>\n",
       "      <td>PM's tacit message: Put Ram tample on hold</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>24-01-2012</td>\n",
       "      <td>Text of the Prime Minister's article</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>25-01-2012</td>\n",
       "      <td>NCW to focus on violence against women</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>26-01-2012</td>\n",
       "      <td>BBC's reality TV will focus on AIIMS</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>27-01-2012</td>\n",
       "      <td>Jaitley firm on legal reforms</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>30-01-2012</td>\n",
       "      <td>Hoshangabad farmers have enough water</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>31-01-2012</td>\n",
       "      <td>BJP jumps into rail track conversion issue</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>01-02-2012</td>\n",
       "      <td>America's unwanted heading for India?</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Date                                               News\n",
       "1   04-01-2012                Fissures in Hurriyat over Pak visit\n",
       "2   05-01-2012              America's unwanted heading for India?\n",
       "3   06-01-2012                 For bigwigs; it is destination Goa\n",
       "4   09-01-2012               Extra buses to clear tourist traffic\n",
       "5   10-01-2012        Dilute the power of transfers; says Riberio\n",
       "6   11-01-2012                  Focus shifts to teaching of Hindi\n",
       "7   12-01-2012               IT will become compulsory in schools\n",
       "8   13-01-2012      Move to stop freedom fighters' pension flayed\n",
       "9   17-01-2012  Gilani claims he applied for passport 2 years ago\n",
       "10  18-01-2012                     Parivar dismisses PM's warning\n",
       "11  19-01-2012              India; Pak exchange lists of N-plants\n",
       "12  20-01-2012        Will Qureshi's return really help the govt?\n",
       "13  23-01-2012         PM's tacit message: Put Ram tample on hold\n",
       "14  24-01-2012               Text of the Prime Minister's article\n",
       "15  25-01-2012             NCW to focus on violence against women\n",
       "16  26-01-2012               BBC's reality TV will focus on AIIMS\n",
       "17  27-01-2012                      Jaitley firm on legal reforms\n",
       "18  30-01-2012              Hoshangabad farmers have enough water\n",
       "19  31-01-2012         BJP jumps into rail track conversion issue\n",
       "20  01-02-2012              America's unwanted heading for India?"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_news.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "0cb9a543",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>News</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>04-01-2012</td>\n",
       "      <td>Fissures in Hurriyat over Pak visit</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>05-01-2012</td>\n",
       "      <td>America's unwanted heading for India?</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>06-01-2012</td>\n",
       "      <td>For bigwigs; it is destination Goa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>09-01-2012</td>\n",
       "      <td>Extra buses to clear tourist traffic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10-01-2012</td>\n",
       "      <td>Dilute the power of transfers; says Riberio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2550</th>\n",
       "      <td>22-02-2022</td>\n",
       "      <td>Konkan Rly special trains between April and July</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2551</th>\n",
       "      <td>23-02-2022</td>\n",
       "      <td>Goa plans courts on economic offences</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2552</th>\n",
       "      <td>24-02-2022</td>\n",
       "      <td>Companies grab govt land; Opposition protests</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2553</th>\n",
       "      <td>25-02-2022</td>\n",
       "      <td>TMC resolution demands ouster of Chidambaram</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2554</th>\n",
       "      <td>28-02-2022</td>\n",
       "      <td>DMK may face fresh trouble with seat sharing</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2555 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Date                                              News\n",
       "0     04-01-2012               Fissures in Hurriyat over Pak visit\n",
       "1     05-01-2012             America's unwanted heading for India?\n",
       "2     06-01-2012                For bigwigs; it is destination Goa\n",
       "3     09-01-2012              Extra buses to clear tourist traffic\n",
       "4     10-01-2012       Dilute the power of transfers; says Riberio\n",
       "...          ...                                               ...\n",
       "2550  22-02-2022  Konkan Rly special trains between April and July\n",
       "2551  23-02-2022             Goa plans courts on economic offences\n",
       "2552  24-02-2022     Companies grab govt land; Opposition protests\n",
       "2553  25-02-2022      TMC resolution demands ouster of Chidambaram\n",
       "2554  28-02-2022      DMK may face fresh trouble with seat sharing\n",
       "\n",
       "[2555 rows x 2 columns]"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Grouping the headlines for each day\n",
    "df_news['News'] = df_news.groupby(['Date']).transform(lambda x : ' '.join(x)) \n",
    "df_news = df_news.drop_duplicates() \n",
    "df_news.reset_index(inplace = True, drop = True)\n",
    "df_news"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "55098f9e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Fissures in Hurriyat over Pak visit'"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# After the grouping the News by Date \n",
    "df_news[\"News\"][0]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f3147f48",
   "metadata": {},
   "source": [
    "Building functioin for getting the **subjectivity** and **Polarity**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "f16c7e61",
   "metadata": {},
   "outputs": [],
   "source": [
    "def getSubjectivity(text):\n",
    "  return TextBlob(text).sentiment.subjectivity\n",
    "\n",
    "def getPolarity(text):\n",
    "  return  TextBlob(text).sentiment.polarity"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "26fb2968",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>News</th>\n",
       "      <th>Subjectivity</th>\n",
       "      <th>Polarity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>04-01-2012</td>\n",
       "      <td>Fissures in Hurriyat over Pak visit</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>05-01-2012</td>\n",
       "      <td>America's unwanted heading for India?</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>06-01-2012</td>\n",
       "      <td>For bigwigs; it is destination Goa</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>09-01-2012</td>\n",
       "      <td>Extra buses to clear tourist traffic</td>\n",
       "      <td>0.241667</td>\n",
       "      <td>0.050000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10-01-2012</td>\n",
       "      <td>Dilute the power of transfers; says Riberio</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2550</th>\n",
       "      <td>22-02-2022</td>\n",
       "      <td>Konkan Rly special trains between April and July</td>\n",
       "      <td>0.571429</td>\n",
       "      <td>0.357143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2551</th>\n",
       "      <td>23-02-2022</td>\n",
       "      <td>Goa plans courts on economic offences</td>\n",
       "      <td>0.200000</td>\n",
       "      <td>0.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2552</th>\n",
       "      <td>24-02-2022</td>\n",
       "      <td>Companies grab govt land; Opposition protests</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2553</th>\n",
       "      <td>25-02-2022</td>\n",
       "      <td>TMC resolution demands ouster of Chidambaram</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2554</th>\n",
       "      <td>28-02-2022</td>\n",
       "      <td>DMK may face fresh trouble with seat sharing</td>\n",
       "      <td>0.350000</td>\n",
       "      <td>0.050000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2555 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Date                                              News  \\\n",
       "0     04-01-2012               Fissures in Hurriyat over Pak visit   \n",
       "1     05-01-2012             America's unwanted heading for India?   \n",
       "2     06-01-2012                For bigwigs; it is destination Goa   \n",
       "3     09-01-2012              Extra buses to clear tourist traffic   \n",
       "4     10-01-2012       Dilute the power of transfers; says Riberio   \n",
       "...          ...                                               ...   \n",
       "2550  22-02-2022  Konkan Rly special trains between April and July   \n",
       "2551  23-02-2022             Goa plans courts on economic offences   \n",
       "2552  24-02-2022     Companies grab govt land; Opposition protests   \n",
       "2553  25-02-2022      TMC resolution demands ouster of Chidambaram   \n",
       "2554  28-02-2022      DMK may face fresh trouble with seat sharing   \n",
       "\n",
       "      Subjectivity  Polarity  \n",
       "0         0.000000  0.000000  \n",
       "1         0.000000  0.000000  \n",
       "2         0.000000  0.000000  \n",
       "3         0.241667  0.050000  \n",
       "4         0.000000  0.000000  \n",
       "...            ...       ...  \n",
       "2550      0.571429  0.357143  \n",
       "2551      0.200000  0.200000  \n",
       "2552      0.000000  0.000000  \n",
       "2553      0.000000  0.000000  \n",
       "2554      0.350000  0.050000  \n",
       "\n",
       "[2555 rows x 4 columns]"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Adding subjectivity and polarity columns\n",
    "df_news['Subjectivity'] = df_news['News'].apply(getSubjectivity)\n",
    "df_news['Polarity'] = df_news['News'].apply(getPolarity)\n",
    "df_news"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a9a77371",
   "metadata": {},
   "source": [
    "### Polarity"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "ec050d4b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (10,6))\n",
    "df_news['Polarity'].hist(color = 'purple')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5f9db71f",
   "metadata": {},
   "source": [
    "### Subejctivity"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "e7e8fdbe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (10,6))\n",
    "df_news['Subjectivity'].hist(color = 'blue')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "f8f0ebda",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>News</th>\n",
       "      <th>Subjectivity</th>\n",
       "      <th>Polarity</th>\n",
       "      <th>Compound</th>\n",
       "      <th>Negative</th>\n",
       "      <th>Neutral</th>\n",
       "      <th>Positive</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>04-01-2012</td>\n",
       "      <td>Fissures in Hurriyat over Pak visit</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>05-01-2012</td>\n",
       "      <td>America's unwanted heading for India?</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.2263</td>\n",
       "      <td>0.322</td>\n",
       "      <td>0.678</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>06-01-2012</td>\n",
       "      <td>For bigwigs; it is destination Goa</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>09-01-2012</td>\n",
       "      <td>Extra buses to clear tourist traffic</td>\n",
       "      <td>0.241667</td>\n",
       "      <td>0.050000</td>\n",
       "      <td>0.3818</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.658</td>\n",
       "      <td>0.342</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10-01-2012</td>\n",
       "      <td>Dilute the power of transfers; says Riberio</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2550</th>\n",
       "      <td>22-02-2022</td>\n",
       "      <td>Konkan Rly special trains between April and July</td>\n",
       "      <td>0.571429</td>\n",
       "      <td>0.357143</td>\n",
       "      <td>0.4019</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.722</td>\n",
       "      <td>0.278</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2551</th>\n",
       "      <td>23-02-2022</td>\n",
       "      <td>Goa plans courts on economic offences</td>\n",
       "      <td>0.200000</td>\n",
       "      <td>0.200000</td>\n",
       "      <td>-0.3400</td>\n",
       "      <td>0.324</td>\n",
       "      <td>0.676</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2552</th>\n",
       "      <td>24-02-2022</td>\n",
       "      <td>Companies grab govt land; Opposition protests</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.2263</td>\n",
       "      <td>0.275</td>\n",
       "      <td>0.725</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2553</th>\n",
       "      <td>25-02-2022</td>\n",
       "      <td>TMC resolution demands ouster of Chidambaram</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2554</th>\n",
       "      <td>28-02-2022</td>\n",
       "      <td>DMK may face fresh trouble with seat sharing</td>\n",
       "      <td>0.350000</td>\n",
       "      <td>0.050000</td>\n",
       "      <td>0.3400</td>\n",
       "      <td>0.211</td>\n",
       "      <td>0.391</td>\n",
       "      <td>0.398</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2555 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Date                                              News  \\\n",
       "0     04-01-2012               Fissures in Hurriyat over Pak visit   \n",
       "1     05-01-2012             America's unwanted heading for India?   \n",
       "2     06-01-2012                For bigwigs; it is destination Goa   \n",
       "3     09-01-2012              Extra buses to clear tourist traffic   \n",
       "4     10-01-2012       Dilute the power of transfers; says Riberio   \n",
       "...          ...                                               ...   \n",
       "2550  22-02-2022  Konkan Rly special trains between April and July   \n",
       "2551  23-02-2022             Goa plans courts on economic offences   \n",
       "2552  24-02-2022     Companies grab govt land; Opposition protests   \n",
       "2553  25-02-2022      TMC resolution demands ouster of Chidambaram   \n",
       "2554  28-02-2022      DMK may face fresh trouble with seat sharing   \n",
       "\n",
       "      Subjectivity  Polarity  Compound  Negative  Neutral  Positive  \n",
       "0         0.000000  0.000000    0.0000     0.000    1.000     0.000  \n",
       "1         0.000000  0.000000   -0.2263     0.322    0.678     0.000  \n",
       "2         0.000000  0.000000    0.0000     0.000    1.000     0.000  \n",
       "3         0.241667  0.050000    0.3818     0.000    0.658     0.342  \n",
       "4         0.000000  0.000000    0.0000     0.000    1.000     0.000  \n",
       "...            ...       ...       ...       ...      ...       ...  \n",
       "2550      0.571429  0.357143    0.4019     0.000    0.722     0.278  \n",
       "2551      0.200000  0.200000   -0.3400     0.324    0.676     0.000  \n",
       "2552      0.000000  0.000000   -0.2263     0.275    0.725     0.000  \n",
       "2553      0.000000  0.000000    0.0000     0.000    1.000     0.000  \n",
       "2554      0.350000  0.050000    0.3400     0.211    0.391     0.398  \n",
       "\n",
       "[2555 rows x 8 columns]"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Adding sentiment score to df_news\n",
    "sia = SentimentIntensityAnalyzer()\n",
    "\n",
    "df_news['Compound'] = [sia.polarity_scores(v)['compound'] for v in df_news['News']]\n",
    "df_news['Negative'] = [sia.polarity_scores(v)['neg'] for v in df_news['News']]\n",
    "df_news['Neutral'] = [sia.polarity_scores(v)['neu'] for v in df_news['News']]\n",
    "df_news['Positive'] = [sia.polarity_scores(v)['pos'] for v in df_news['News']]\n",
    "df_news"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "b7cf81aa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Adj Close</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2012-03-01</td>\n",
       "      <td>5.788000</td>\n",
       "      <td>5.900000</td>\n",
       "      <td>5.530000</td>\n",
       "      <td>5.616000</td>\n",
       "      <td>5.616000</td>\n",
       "      <td>4640500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2012-04-01</td>\n",
       "      <td>5.642000</td>\n",
       "      <td>5.734000</td>\n",
       "      <td>5.500000</td>\n",
       "      <td>5.542000</td>\n",
       "      <td>5.542000</td>\n",
       "      <td>3150500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2012-05-01</td>\n",
       "      <td>5.552000</td>\n",
       "      <td>5.586000</td>\n",
       "      <td>5.370000</td>\n",
       "      <td>5.424000</td>\n",
       "      <td>5.424000</td>\n",
       "      <td>5027500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2012-06-01</td>\n",
       "      <td>5.440000</td>\n",
       "      <td>5.558000</td>\n",
       "      <td>5.282000</td>\n",
       "      <td>5.382000</td>\n",
       "      <td>5.382000</td>\n",
       "      <td>4931500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2012-09-01</td>\n",
       "      <td>5.400000</td>\n",
       "      <td>5.498000</td>\n",
       "      <td>5.224000</td>\n",
       "      <td>5.450000</td>\n",
       "      <td>5.450000</td>\n",
       "      <td>4485000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2551</th>\n",
       "      <td>2022-02-22</td>\n",
       "      <td>834.130005</td>\n",
       "      <td>856.729980</td>\n",
       "      <td>801.099976</td>\n",
       "      <td>821.530029</td>\n",
       "      <td>821.530029</td>\n",
       "      <td>27762700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2552</th>\n",
       "      <td>2022-02-23</td>\n",
       "      <td>830.429993</td>\n",
       "      <td>835.299988</td>\n",
       "      <td>760.559998</td>\n",
       "      <td>764.039978</td>\n",
       "      <td>764.039978</td>\n",
       "      <td>31752300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2553</th>\n",
       "      <td>2022-02-24</td>\n",
       "      <td>700.390015</td>\n",
       "      <td>802.479980</td>\n",
       "      <td>700.000000</td>\n",
       "      <td>800.770020</td>\n",
       "      <td>800.770020</td>\n",
       "      <td>45107400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2554</th>\n",
       "      <td>2022-02-25</td>\n",
       "      <td>809.229980</td>\n",
       "      <td>819.500000</td>\n",
       "      <td>782.400024</td>\n",
       "      <td>809.869995</td>\n",
       "      <td>809.869995</td>\n",
       "      <td>25355900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2555</th>\n",
       "      <td>2022-02-28</td>\n",
       "      <td>815.010010</td>\n",
       "      <td>876.859985</td>\n",
       "      <td>814.710022</td>\n",
       "      <td>870.429993</td>\n",
       "      <td>870.429993</td>\n",
       "      <td>33002300</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2556 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Date        Open        High         Low       Close   Adj Close  \\\n",
       "0    2012-03-01    5.788000    5.900000    5.530000    5.616000    5.616000   \n",
       "1    2012-04-01    5.642000    5.734000    5.500000    5.542000    5.542000   \n",
       "2    2012-05-01    5.552000    5.586000    5.370000    5.424000    5.424000   \n",
       "3    2012-06-01    5.440000    5.558000    5.282000    5.382000    5.382000   \n",
       "4    2012-09-01    5.400000    5.498000    5.224000    5.450000    5.450000   \n",
       "...         ...         ...         ...         ...         ...         ...   \n",
       "2551 2022-02-22  834.130005  856.729980  801.099976  821.530029  821.530029   \n",
       "2552 2022-02-23  830.429993  835.299988  760.559998  764.039978  764.039978   \n",
       "2553 2022-02-24  700.390015  802.479980  700.000000  800.770020  800.770020   \n",
       "2554 2022-02-25  809.229980  819.500000  782.400024  809.869995  809.869995   \n",
       "2555 2022-02-28  815.010010  876.859985  814.710022  870.429993  870.429993   \n",
       "\n",
       "        Volume  \n",
       "0      4640500  \n",
       "1      3150500  \n",
       "2      5027500  \n",
       "3      4931500  \n",
       "4      4485000  \n",
       "...        ...  \n",
       "2551  27762700  \n",
       "2552  31752300  \n",
       "2553  45107400  \n",
       "2554  25355900  \n",
       "2555  33002300  \n",
       "\n",
       "[2556 rows x 7 columns]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_prices"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "bc6f2965",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>News</th>\n",
       "      <th>Subjectivity</th>\n",
       "      <th>Polarity</th>\n",
       "      <th>Compound</th>\n",
       "      <th>Negative</th>\n",
       "      <th>Neutral</th>\n",
       "      <th>Positive</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>04-01-2012</td>\n",
       "      <td>Fissures in Hurriyat over Pak visit</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>05-01-2012</td>\n",
       "      <td>America's unwanted heading for India?</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.2263</td>\n",
       "      <td>0.322</td>\n",
       "      <td>0.678</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>06-01-2012</td>\n",
       "      <td>For bigwigs; it is destination Goa</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>09-01-2012</td>\n",
       "      <td>Extra buses to clear tourist traffic</td>\n",
       "      <td>0.241667</td>\n",
       "      <td>0.050000</td>\n",
       "      <td>0.3818</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.658</td>\n",
       "      <td>0.342</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10-01-2012</td>\n",
       "      <td>Dilute the power of transfers; says Riberio</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2550</th>\n",
       "      <td>22-02-2022</td>\n",
       "      <td>Konkan Rly special trains between April and July</td>\n",
       "      <td>0.571429</td>\n",
       "      <td>0.357143</td>\n",
       "      <td>0.4019</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.722</td>\n",
       "      <td>0.278</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2551</th>\n",
       "      <td>23-02-2022</td>\n",
       "      <td>Goa plans courts on economic offences</td>\n",
       "      <td>0.200000</td>\n",
       "      <td>0.200000</td>\n",
       "      <td>-0.3400</td>\n",
       "      <td>0.324</td>\n",
       "      <td>0.676</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2552</th>\n",
       "      <td>24-02-2022</td>\n",
       "      <td>Companies grab govt land; Opposition protests</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.2263</td>\n",
       "      <td>0.275</td>\n",
       "      <td>0.725</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2553</th>\n",
       "      <td>25-02-2022</td>\n",
       "      <td>TMC resolution demands ouster of Chidambaram</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2554</th>\n",
       "      <td>28-02-2022</td>\n",
       "      <td>DMK may face fresh trouble with seat sharing</td>\n",
       "      <td>0.350000</td>\n",
       "      <td>0.050000</td>\n",
       "      <td>0.3400</td>\n",
       "      <td>0.211</td>\n",
       "      <td>0.391</td>\n",
       "      <td>0.398</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2555 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Date                                              News  \\\n",
       "0     04-01-2012               Fissures in Hurriyat over Pak visit   \n",
       "1     05-01-2012             America's unwanted heading for India?   \n",
       "2     06-01-2012                For bigwigs; it is destination Goa   \n",
       "3     09-01-2012              Extra buses to clear tourist traffic   \n",
       "4     10-01-2012       Dilute the power of transfers; says Riberio   \n",
       "...          ...                                               ...   \n",
       "2550  22-02-2022  Konkan Rly special trains between April and July   \n",
       "2551  23-02-2022             Goa plans courts on economic offences   \n",
       "2552  24-02-2022     Companies grab govt land; Opposition protests   \n",
       "2553  25-02-2022      TMC resolution demands ouster of Chidambaram   \n",
       "2554  28-02-2022      DMK may face fresh trouble with seat sharing   \n",
       "\n",
       "      Subjectivity  Polarity  Compound  Negative  Neutral  Positive  \n",
       "0         0.000000  0.000000    0.0000     0.000    1.000     0.000  \n",
       "1         0.000000  0.000000   -0.2263     0.322    0.678     0.000  \n",
       "2         0.000000  0.000000    0.0000     0.000    1.000     0.000  \n",
       "3         0.241667  0.050000    0.3818     0.000    0.658     0.342  \n",
       "4         0.000000  0.000000    0.0000     0.000    1.000     0.000  \n",
       "...            ...       ...       ...       ...      ...       ...  \n",
       "2550      0.571429  0.357143    0.4019     0.000    0.722     0.278  \n",
       "2551      0.200000  0.200000   -0.3400     0.324    0.676     0.000  \n",
       "2552      0.000000  0.000000   -0.2263     0.275    0.725     0.000  \n",
       "2553      0.000000  0.000000    0.0000     0.000    1.000     0.000  \n",
       "2554      0.350000  0.050000    0.3400     0.211    0.391     0.398  \n",
       "\n",
       "[2555 rows x 8 columns]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_news"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "2e0f816e",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_news[\"Close\"]= df_prices[\"Close\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "c39fa1a6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>News</th>\n",
       "      <th>Subjectivity</th>\n",
       "      <th>Polarity</th>\n",
       "      <th>Compound</th>\n",
       "      <th>Negative</th>\n",
       "      <th>Neutral</th>\n",
       "      <th>Positive</th>\n",
       "      <th>Close</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>04-01-2012</td>\n",
       "      <td>Fissures in Hurriyat over Pak visit</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>5.616000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>05-01-2012</td>\n",
       "      <td>America's unwanted heading for India?</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.2263</td>\n",
       "      <td>0.322</td>\n",
       "      <td>0.678</td>\n",
       "      <td>0.000</td>\n",
       "      <td>5.542000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>06-01-2012</td>\n",
       "      <td>For bigwigs; it is destination Goa</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>5.424000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>09-01-2012</td>\n",
       "      <td>Extra buses to clear tourist traffic</td>\n",
       "      <td>0.241667</td>\n",
       "      <td>0.050000</td>\n",
       "      <td>0.3818</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.658</td>\n",
       "      <td>0.342</td>\n",
       "      <td>5.382000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10-01-2012</td>\n",
       "      <td>Dilute the power of transfers; says Riberio</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>5.450000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2550</th>\n",
       "      <td>22-02-2022</td>\n",
       "      <td>Konkan Rly special trains between April and July</td>\n",
       "      <td>0.571429</td>\n",
       "      <td>0.357143</td>\n",
       "      <td>0.4019</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.722</td>\n",
       "      <td>0.278</td>\n",
       "      <td>856.979980</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2551</th>\n",
       "      <td>23-02-2022</td>\n",
       "      <td>Goa plans courts on economic offences</td>\n",
       "      <td>0.200000</td>\n",
       "      <td>0.200000</td>\n",
       "      <td>-0.3400</td>\n",
       "      <td>0.324</td>\n",
       "      <td>0.676</td>\n",
       "      <td>0.000</td>\n",
       "      <td>821.530029</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2552</th>\n",
       "      <td>24-02-2022</td>\n",
       "      <td>Companies grab govt land; Opposition protests</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.2263</td>\n",
       "      <td>0.275</td>\n",
       "      <td>0.725</td>\n",
       "      <td>0.000</td>\n",
       "      <td>764.039978</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2553</th>\n",
       "      <td>25-02-2022</td>\n",
       "      <td>TMC resolution demands ouster of Chidambaram</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>800.770020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2554</th>\n",
       "      <td>28-02-2022</td>\n",
       "      <td>DMK may face fresh trouble with seat sharing</td>\n",
       "      <td>0.350000</td>\n",
       "      <td>0.050000</td>\n",
       "      <td>0.3400</td>\n",
       "      <td>0.211</td>\n",
       "      <td>0.391</td>\n",
       "      <td>0.398</td>\n",
       "      <td>809.869995</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2555 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Date                                              News  \\\n",
       "0     04-01-2012               Fissures in Hurriyat over Pak visit   \n",
       "1     05-01-2012             America's unwanted heading for India?   \n",
       "2     06-01-2012                For bigwigs; it is destination Goa   \n",
       "3     09-01-2012              Extra buses to clear tourist traffic   \n",
       "4     10-01-2012       Dilute the power of transfers; says Riberio   \n",
       "...          ...                                               ...   \n",
       "2550  22-02-2022  Konkan Rly special trains between April and July   \n",
       "2551  23-02-2022             Goa plans courts on economic offences   \n",
       "2552  24-02-2022     Companies grab govt land; Opposition protests   \n",
       "2553  25-02-2022      TMC resolution demands ouster of Chidambaram   \n",
       "2554  28-02-2022      DMK may face fresh trouble with seat sharing   \n",
       "\n",
       "      Subjectivity  Polarity  Compound  Negative  Neutral  Positive  \\\n",
       "0         0.000000  0.000000    0.0000     0.000    1.000     0.000   \n",
       "1         0.000000  0.000000   -0.2263     0.322    0.678     0.000   \n",
       "2         0.000000  0.000000    0.0000     0.000    1.000     0.000   \n",
       "3         0.241667  0.050000    0.3818     0.000    0.658     0.342   \n",
       "4         0.000000  0.000000    0.0000     0.000    1.000     0.000   \n",
       "...            ...       ...       ...       ...      ...       ...   \n",
       "2550      0.571429  0.357143    0.4019     0.000    0.722     0.278   \n",
       "2551      0.200000  0.200000   -0.3400     0.324    0.676     0.000   \n",
       "2552      0.000000  0.000000   -0.2263     0.275    0.725     0.000   \n",
       "2553      0.000000  0.000000    0.0000     0.000    1.000     0.000   \n",
       "2554      0.350000  0.050000    0.3400     0.211    0.391     0.398   \n",
       "\n",
       "           Close  \n",
       "0       5.616000  \n",
       "1       5.542000  \n",
       "2       5.424000  \n",
       "3       5.382000  \n",
       "4       5.450000  \n",
       "...          ...  \n",
       "2550  856.979980  \n",
       "2551  821.530029  \n",
       "2552  764.039978  \n",
       "2553  800.770020  \n",
       "2554  809.869995  \n",
       "\n",
       "[2555 rows x 9 columns]"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_news"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "1bfd5452",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df_news[['Close','Subjectivity', 'Polarity', 'Compound', 'Negative', 'Neutral' ,'Positive']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "df6308c6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Close</th>\n",
       "      <th>Subjectivity</th>\n",
       "      <th>Polarity</th>\n",
       "      <th>Compound</th>\n",
       "      <th>Negative</th>\n",
       "      <th>Neutral</th>\n",
       "      <th>Positive</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.616000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.542000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.2263</td>\n",
       "      <td>0.322</td>\n",
       "      <td>0.678</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5.424000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5.382000</td>\n",
       "      <td>0.241667</td>\n",
       "      <td>0.050000</td>\n",
       "      <td>0.3818</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.658</td>\n",
       "      <td>0.342</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.450000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2550</th>\n",
       "      <td>856.979980</td>\n",
       "      <td>0.571429</td>\n",
       "      <td>0.357143</td>\n",
       "      <td>0.4019</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.722</td>\n",
       "      <td>0.278</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2551</th>\n",
       "      <td>821.530029</td>\n",
       "      <td>0.200000</td>\n",
       "      <td>0.200000</td>\n",
       "      <td>-0.3400</td>\n",
       "      <td>0.324</td>\n",
       "      <td>0.676</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2552</th>\n",
       "      <td>764.039978</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.2263</td>\n",
       "      <td>0.275</td>\n",
       "      <td>0.725</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2553</th>\n",
       "      <td>800.770020</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2554</th>\n",
       "      <td>809.869995</td>\n",
       "      <td>0.350000</td>\n",
       "      <td>0.050000</td>\n",
       "      <td>0.3400</td>\n",
       "      <td>0.211</td>\n",
       "      <td>0.391</td>\n",
       "      <td>0.398</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2555 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Close  Subjectivity  Polarity  Compound  Negative  Neutral  \\\n",
       "0       5.616000      0.000000  0.000000    0.0000     0.000    1.000   \n",
       "1       5.542000      0.000000  0.000000   -0.2263     0.322    0.678   \n",
       "2       5.424000      0.000000  0.000000    0.0000     0.000    1.000   \n",
       "3       5.382000      0.241667  0.050000    0.3818     0.000    0.658   \n",
       "4       5.450000      0.000000  0.000000    0.0000     0.000    1.000   \n",
       "...          ...           ...       ...       ...       ...      ...   \n",
       "2550  856.979980      0.571429  0.357143    0.4019     0.000    0.722   \n",
       "2551  821.530029      0.200000  0.200000   -0.3400     0.324    0.676   \n",
       "2552  764.039978      0.000000  0.000000   -0.2263     0.275    0.725   \n",
       "2553  800.770020      0.000000  0.000000    0.0000     0.000    1.000   \n",
       "2554  809.869995      0.350000  0.050000    0.3400     0.211    0.391   \n",
       "\n",
       "      Positive  \n",
       "0        0.000  \n",
       "1        0.000  \n",
       "2        0.000  \n",
       "3        0.342  \n",
       "4        0.000  \n",
       "...        ...  \n",
       "2550     0.278  \n",
       "2551     0.000  \n",
       "2552     0.000  \n",
       "2553     0.000  \n",
       "2554     0.398  \n",
       "\n",
       "[2555 rows x 7 columns]"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "7ef38251",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Close</th>\n",
       "      <th>Subjectivity</th>\n",
       "      <th>Polarity</th>\n",
       "      <th>Compound</th>\n",
       "      <th>Negative</th>\n",
       "      <th>Neutral</th>\n",
       "      <th>Positive</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.000863</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.500</td>\n",
       "      <td>0.511478</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.000803</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.500</td>\n",
       "      <td>0.382252</td>\n",
       "      <td>0.356589</td>\n",
       "      <td>0.678</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.000707</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.500</td>\n",
       "      <td>0.511478</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.000672</td>\n",
       "      <td>0.241667</td>\n",
       "      <td>0.525</td>\n",
       "      <td>0.729500</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.658</td>\n",
       "      <td>0.342</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.000728</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.500</td>\n",
       "      <td>0.511478</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Close  Subjectivity  Polarity  Compound  Negative  Neutral  Positive\n",
       "0  0.000863      0.000000     0.500  0.511478  0.000000    1.000     0.000\n",
       "1  0.000803      0.000000     0.500  0.382252  0.356589    0.678     0.000\n",
       "2  0.000707      0.000000     0.500  0.511478  0.000000    1.000     0.000\n",
       "3  0.000672      0.241667     0.525  0.729500  0.000000    0.658     0.342\n",
       "4  0.000728      0.000000     0.500  0.511478  0.000000    1.000     0.000"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.preprocessing import MinMaxScaler\n",
    "sc = MinMaxScaler()\n",
    "new_df = pd.DataFrame(sc.fit_transform(df))\n",
    "new_df.columns = df.columns\n",
    "new_df.index = df.index\n",
    "new_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "0f1e72f4",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = new_df.drop('Close', axis=1)  # independent variable\n",
    "y =new_df['Close']  # dependent Variable"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "9dc6fefb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Subjectivity</th>\n",
       "      <th>Polarity</th>\n",
       "      <th>Compound</th>\n",
       "      <th>Negative</th>\n",
       "      <th>Neutral</th>\n",
       "      <th>Positive</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.511478</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.382252</td>\n",
       "      <td>0.356589</td>\n",
       "      <td>0.678</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.511478</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.241667</td>\n",
       "      <td>0.525000</td>\n",
       "      <td>0.729500</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.658</td>\n",
       "      <td>0.342</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.511478</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2550</th>\n",
       "      <td>0.571429</td>\n",
       "      <td>0.678571</td>\n",
       "      <td>0.740978</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.722</td>\n",
       "      <td>0.278</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2551</th>\n",
       "      <td>0.200000</td>\n",
       "      <td>0.600000</td>\n",
       "      <td>0.317325</td>\n",
       "      <td>0.358804</td>\n",
       "      <td>0.676</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2552</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.382252</td>\n",
       "      <td>0.304540</td>\n",
       "      <td>0.725</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2553</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.511478</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2554</th>\n",
       "      <td>0.350000</td>\n",
       "      <td>0.525000</td>\n",
       "      <td>0.705630</td>\n",
       "      <td>0.233666</td>\n",
       "      <td>0.391</td>\n",
       "      <td>0.398</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2555 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Subjectivity  Polarity  Compound  Negative  Neutral  Positive\n",
       "0         0.000000  0.500000  0.511478  0.000000    1.000     0.000\n",
       "1         0.000000  0.500000  0.382252  0.356589    0.678     0.000\n",
       "2         0.000000  0.500000  0.511478  0.000000    1.000     0.000\n",
       "3         0.241667  0.525000  0.729500  0.000000    0.658     0.342\n",
       "4         0.000000  0.500000  0.511478  0.000000    1.000     0.000\n",
       "...            ...       ...       ...       ...      ...       ...\n",
       "2550      0.571429  0.678571  0.740978  0.000000    0.722     0.278\n",
       "2551      0.200000  0.600000  0.317325  0.358804    0.676     0.000\n",
       "2552      0.000000  0.500000  0.382252  0.304540    0.725     0.000\n",
       "2553      0.000000  0.500000  0.511478  0.000000    1.000     0.000\n",
       "2554      0.350000  0.525000  0.705630  0.233666    0.391     0.398\n",
       "\n",
       "[2555 rows x 6 columns]"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "d15ce224",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       0.000863\n",
       "1       0.000803\n",
       "2       0.000707\n",
       "3       0.000672\n",
       "4       0.000728\n",
       "          ...   \n",
       "2550    0.695655\n",
       "2551    0.666724\n",
       "2552    0.619807\n",
       "2553    0.649782\n",
       "2554    0.657209\n",
       "Name: Close, Length: 2555, dtype: float64"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "df9d1c55",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2044, 6)"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state = 0)\n",
    "x_train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "14c14760",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Subjectivity</th>\n",
       "      <th>Polarity</th>\n",
       "      <th>Compound</th>\n",
       "      <th>Negative</th>\n",
       "      <th>Neutral</th>\n",
       "      <th>Positive</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1119</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.511478</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1097</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.511478</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1000</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.511478</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1539</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.717736</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.737</td>\n",
       "      <td>0.263</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>723</th>\n",
       "      <td>0.600000</td>\n",
       "      <td>0.750000</td>\n",
       "      <td>0.729500</td>\n",
       "      <td>0.326689</td>\n",
       "      <td>0.227</td>\n",
       "      <td>0.477</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2353</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.511478</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>0.666667</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>0.853757</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.562</td>\n",
       "      <td>0.438</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1935</th>\n",
       "      <td>0.300000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.969450</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.493</td>\n",
       "      <td>0.507</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1914</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.511478</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>958</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.154637</td>\n",
       "      <td>0.744186</td>\n",
       "      <td>0.328</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Subjectivity  Polarity  Compound  Negative  Neutral  Positive\n",
       "1119      0.000000  0.500000  0.511478  0.000000    1.000     0.000\n",
       "1097      0.000000  0.500000  0.511478  0.000000    1.000     0.000\n",
       "1000      0.000000  0.500000  0.511478  0.000000    1.000     0.000\n",
       "1539      0.000000  0.500000  0.717736  0.000000    0.737     0.263\n",
       "723       0.600000  0.750000  0.729500  0.326689    0.227     0.477\n",
       "2353      0.000000  0.500000  0.511478  0.000000    1.000     0.000\n",
       "52        0.666667  0.666667  0.853757  0.000000    0.562     0.438\n",
       "1935      0.300000  1.000000  0.969450  0.000000    0.493     0.507\n",
       "1914      0.000000  0.500000  0.511478  0.000000    1.000     0.000\n",
       "958       0.000000  0.500000  0.154637  0.744186    0.328     0.000"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_train[:10]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ba17200",
   "metadata": {},
   "source": [
    "## Random Forest Classifier "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "31e593b2",
   "metadata": {},
   "outputs": [],
   "source": [
    "rf = RandomForestRegressor()\n",
    "rf.fit(x_train, y_train)\n",
    "prediction=rf.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "ad38971e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.12237403 0.38996146 0.17575961 0.05743219 0.12237403 0.12237403\n",
      " 0.03654702 0.04338974 0.11324598 0.12237403]\n",
      "*****************\n",
      "2211    0.362608\n",
      "2311    0.567218\n",
      "1766    0.052586\n",
      "1231    0.027483\n",
      "621     0.034229\n",
      "224     0.001524\n",
      "2252    0.518440\n",
      "1211    0.029306\n",
      "997     0.033896\n",
      "438     0.027781\n",
      "Name: Close, dtype: float64\n",
      "*****************\n",
      "Mean Squared Error is  0.047083779493327\n"
     ]
    }
   ],
   "source": [
    "print(prediction[:10])\n",
    "print(\"*****************\")\n",
    "print(y_test[:10])\n",
    "print(\"*****************\")\n",
    "print(\"Mean Squared Error is \",mean_squared_error(prediction,y_test))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "84906e3d",
   "metadata": {},
   "source": [
    "# AdaBoostRegressor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "3f910c58",
   "metadata": {},
   "outputs": [],
   "source": [
    "adb = AdaBoostRegressor()\n",
    "adb.fit(x_train, y_train)\n",
    "predictions = adb.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "2b8f7e52",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.05068375155570582\n"
     ]
    }
   ],
   "source": [
    "print(mean_squared_error(predictions, y_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "7eab4197",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.tree import DecisionTreeRegressor\n",
    "dec_tree = DecisionTreeRegressor()\n",
    "dec_tree.fit(x_train, y_train)\n",
    "predictions = dec_tree.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "2a51068c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.12417446 0.54952533 0.03708975 0.05736285 0.12417446 0.12417446\n",
      " 0.03821922 0.02676945 0.04997584 0.12417446]\n",
      "*****************\n",
      "2211    0.362608\n",
      "2311    0.567218\n",
      "1766    0.052586\n",
      "1231    0.027483\n",
      "621     0.034229\n",
      "224     0.001524\n",
      "2252    0.518440\n",
      "1211    0.029306\n",
      "997     0.033896\n",
      "438     0.027781\n",
      "Name: Close, dtype: float64\n",
      "*****************\n",
      "0.056403144730789244\n"
     ]
    }
   ],
   "source": [
    "print(predictions[:10])\n",
    "print(\"*****************\")\n",
    "print(y_test[:10])\n",
    "print(\"*****************\")\n",
    "print(mean_squared_error(predictions,y_test))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d1df21ac",
   "metadata": {},
   "source": [
    "# LGBMRegressor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "7affca11",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LGBMRegressor()"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lgb = lightgbm.LGBMRegressor()\n",
    "lgb.fit(x_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "57f73248",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.04677440383080473\n"
     ]
    }
   ],
   "source": [
    "predictions = lgb.predict(x_test)\n",
    "print(mean_squared_error(predictions,y_test))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "51a1619e",
   "metadata": {},
   "source": [
    "# xgboost"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "5f70f4ac",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "XGBRegressor(base_score=0.5, booster='gbtree', colsample_bylevel=1,\n",
       "             colsample_bynode=1, colsample_bytree=1, enable_categorical=False,\n",
       "             gamma=0, gpu_id=-1, importance_type=None,\n",
       "             interaction_constraints='', learning_rate=0.300000012,\n",
       "             max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan,\n",
       "             monotone_constraints='()', n_estimators=100, n_jobs=8,\n",
       "             num_parallel_tree=1, predictor='auto', random_state=0, reg_alpha=0,\n",
       "             reg_lambda=1, scale_pos_weight=1, subsample=1, tree_method='exact',\n",
       "             validate_parameters=1, verbosity=None)"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xgb = xgboost.XGBRegressor()\n",
    "xgb.fit(x_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "c495426d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.05026094334908537\n"
     ]
    }
   ],
   "source": [
    "predictions = xgb.predict(x_test)\n",
    "print(mean_squared_error(predictions,y_test))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2fa14460",
   "metadata": {},
   "source": [
    "#### **Hence, we conclude the LGBMRegressor performed the best with minimum mean squared error of 0.04677440383080473.**"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
